version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: aero_lunch
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aero-network

  # Redis для кеширования
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aero-network

  # Backend API
  backend:
    build: ./server
    restart: unless-stopped
    environment:
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres_password@postgres:5432/aero_lunch?schema=public
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - aero-network
    volumes:
      - ./server/.env:/app/.env:ro

  # Frontend (Nginx для статики)
  frontend:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - aero-network

volumes:
  postgres_data:
  redis_data:

networks:
  aero-network:
    driver: bridge 